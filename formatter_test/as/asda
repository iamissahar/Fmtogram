
	t.Run("Required fields without naming method and voice-note from storage", func(t *testing.T) {
		msg := formatter.CreateEmpltyMessage()

		ch := createChat(msg)

		an := msg.NewVoiceNote()
		an.WriteVoiceNoteStorage("media_test/dimaJOSKAproNATO.ogg")

		msg.AddVoiceNote(an)

		_, err := msg.Send()
		if err != nil {
			t.Fatal(err)
		}

		t.Log(ch.GetResponse())
		t.Log(an.GetResponse())
	})
	t.Run("Required fields with naming method and voice-note from storage", func(t *testing.T) {
		msg := formatter.CreateEmpltyMessage()

		ch := createChat(msg)

		an := msg.NewVoiceNote()
		an.WriteVoiceNoteStorage("media_test/dimaJOSKAproNATO.ogg")

		msg.AddChat(ch)
		msg.AddVoiceNote(an)

		msg.AddMethod(methods.VoiceNote)

		_, err := msg.Send()
		if err != nil {
			t.Fatal(err)
		}

		t.Log(ch.GetResponse())
		t.Log(an.GetResponse())
	})
	t.Run("Required and unrequired fields without naming method and voice-note from telegram", func(t *testing.T) {
		msg := formatter.CreateEmpltyMessage()

		ch := createChat(msg)

		an := msg.NewVoiceNote()

		an.WriteVoiceNoteTelegram("CgACAgIAAxkDAAIDK2co1j66v-5uxwohfxzKv0MhLZntAAL1WQAC43ZJSRKRpvz2ZWV_NgQ")
		an.WriteCaption("<b>SELAM</b> ALEYKUM!")
		an.WriteParseMode(types.HTML)
		f := make([]*types.MessageEntity, 1)
		f[0] = &types.MessageEntity{Type: "/start@jobs_bot"}
		an.WriteCaptionEntities(f)
		an.WriteDuration(3)
		an.WriteHasSpoiler()
		an.WriteHeight(16)
		an.WriteShowCaptionAboveMedia()
		an.WriteWidth(88)

		inf := msg.NewMessage()
		inf.WriteDisableNotification()
		inf.WriteProtectContent()
		inf.WriteReplyParameters(&types.ReplyParameters{MessageID: 532, ChatID: 738070596})

		createInlineKeyboard(msg, t)

		msg.AddMessage(inf)
		msg.AddVoiceNote(an)

		_, err := msg.Send()
		if err != nil {
			t.Fatal(err)
		}

		t.Log(ch.GetResponse())
		t.Log(inf.GetResponse())
		t.Log(an.GetResponse())
	})